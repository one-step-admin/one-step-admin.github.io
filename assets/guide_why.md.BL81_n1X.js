import{c as s,o as l,j as t,a4 as d,a as e,t as n,k as p}from"./chunks/framework.D-zNm3Tp.js";const m="/intro-1.gif",h="/intro-2.gif",c="/intro-3.gif",u="/intro-4.gif",f="/intro-5.gif",x=JSON.parse('{"title":"为什么选择我们 ?","description":"","frontmatter":{},"headers":[],"relativePath":"guide/why.md","filePath":"guide/why.md"}'),g={name:"guide/why.md"},P=Object.assign(g,{setup(b){const i="2021/11/01",r=new Date().getTime()/1e3-new Date(i).getTime()/1e3,o=parseInt(r/60/60/24);return(_,a)=>(l(),s("div",null,[a[1]||(a[1]=t("h1",{id:"为什么选择我们",tabindex:"-1"},[e("为什么选择我们 ? "),t("a",{class:"header-anchor",href:"#为什么选择我们","aria-label":'Permalink to "为什么选择我们 ?"'},"​")],-1)),a[2]||(a[2]=t("p",null,"如果你正在做后台框架相关的调研或选型，相信这篇介绍能帮助你快速了解 One-step-admin 的特点，以及与传统后台框架的对比。",-1)),a[3]||(a[3]=t("h2",{id:"长期且稳定",tabindex:"-1"},[e("长期且稳定 "),t("a",{class:"header-anchor",href:"#长期且稳定","aria-label":'Permalink to "长期且稳定"'},"​")],-1)),t("p",null,[e("One-step-admin 自 "+n(i)+" 正式对外发布，截止到今天为止，已持续维护 "),t("strong",null,n(p(o)),1),a[0]||(a[0]=e(" 天。"))]),a[4]||(a[4]=d('<h2 id="高效的交互方式" tabindex="-1">高效的交互方式 <a class="header-anchor" href="#高效的交互方式" aria-label="Permalink to &quot;高效的交互方式&quot;">​</a></h2><p>摆脱传统后台框架路由跳转的交互，将每个模块以<strong>窗口</strong>的形式展示在同一个界面中，让使用人员可以做到跨模块的多线操作。</p><p><img src="'+m+'" alt="" data-zoomable=""></p><h2 id="窗口最大化" tabindex="-1">窗口最大化 <a class="header-anchor" href="#窗口最大化" aria-label="Permalink to &quot;窗口最大化&quot;">​</a></h2><p>窗口默认宽度为 800px ，可以在项目中进行调整，也可以通过最大化按钮将窗口最大化展示，以便展示更多信息。</p><p><img src="'+h+'" alt="" data-zoomable=""></p><h2 id="快速定位操作窗口" tabindex="-1">快速定位操作窗口 <a class="header-anchor" href="#快速定位操作窗口" aria-label="Permalink to &quot;快速定位操作窗口&quot;">​</a></h2><p>提供的预览界面可以帮助使用人员快速定位到需要操作的窗口。</p><p><img src="'+c+'" alt="" data-zoomable=""></p><h2 id="专注模式" tabindex="-1">专注模式 <a class="header-anchor" href="#专注模式" aria-label="Permalink to &quot;专注模式&quot;">​</a></h2><p>可勾选多个窗口平均分布在页面中，专注于所勾选的窗口进行操作。</p><p><img src="'+u+'" alt="" data-zoomable=""></p><h2 id="窗口排序" tabindex="-1">窗口排序 <a class="header-anchor" href="#窗口排序" aria-label="Permalink to &quot;窗口排序&quot;">​</a></h2><p>快速调整窗口的展示顺序。</p><p><img src="'+f+'" alt="" data-zoomable=""></p><h2 id="继承自-fantastic-admin" tabindex="-1">继承自 Fantastic-admin <a class="header-anchor" href="#继承自-fantastic-admin" aria-label="Permalink to &quot;继承自 Fantastic-admin&quot;">​</a></h2><p>本框架继承了 Fantastic-admin 许多优秀的特性。例如同样提供了 5 款导航栏模式，3 款导航栏风格以及 6 款主题配色，导航也提供了各种展示形态的设置，显隐、标题、图标、徽标、外链等。</p><h2 id="为什么不是-fantastic-admin" tabindex="-1">为什么不是 Fantastic-admin ? <a class="header-anchor" href="#为什么不是-fantastic-admin" aria-label="Permalink to &quot;为什么不是 Fantastic-admin ?&quot;">​</a></h2><p>这里的 Fantastic-admin 代表了市面上几乎所有的传统后台框架，它们的优势在于理解成本低，每个页面的功能明确，需要做什么操作就进入不同的页面。</p><p>而劣势也是因为这种优势导致的，例如要在多个模块之间进行操作，就需要频繁切换路由，而切换路由会导致之前页面上的数据丢失，进而扩展了页面缓存和标签栏的特性，但也变相增加了开发人员的开发成本。其次现在的显示器都在往高分屏/带鱼屏发展，当页面展示内容不多的时候，界面上会显示大量的留白，造成空间浪费。</p><p>基于传统后台框架的这些痛点，One-step-admin 应运而生，它探索出了一种全新的交互方式，有效<strong>提高了使用人员的操作效率</strong>，同时也<strong>减轻了开发人员的开发成本</strong>。</p><p>以上面举例的场景，在 One-step-admin 里，因为模块都以窗口的形式在同一个界面上展示，所以就不存在切换路由，也就不存在切换路由导致页面数据丢失的场景，开发人员只需关注模块内的业务实现即可。</p>',22))]))}});export{x as __pageData,P as default};
