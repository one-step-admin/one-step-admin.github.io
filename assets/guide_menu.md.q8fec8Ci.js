import{_ as l,C as h,c as d,o as p,a4 as n,G as e,a as s,j as i}from"./chunks/framework.D-zNm3Tp.js";const C=JSON.parse('{"title":"导航","description":"","frontmatter":{},"headers":[],"relativePath":"guide/menu.md","filePath":"guide/menu.md"}'),r={name:"guide/menu.md"},k={id:"windowwidth",tabindex:"-1"},o={id:"i18n",tabindex:"-1"},g={id:"notitle",tabindex:"-1"},E={id:"badge",tabindex:"-1"};function y(c,t,x,b,u,m){const a=h("Badge");return p(),d("div",null,[t[15]||(t[15]=n(`<h1 id="导航" tabindex="-1">导航 <a class="header-anchor" href="#导航" aria-label="Permalink to &quot;导航&quot;">​</a></h1><p>项目导航配置存放在 <code>/src/menu/modules/</code> 目录下，每一个 ts 文件会被视为一个导航模块。</p><p>所有配置的导航模块均需要在 <code>/src/menu/index.ts</code> 文件里进行引入并放到主导航下。</p><h2 id="基本配置" tabindex="-1">基本配置 <a class="header-anchor" href="#基本配置" aria-label="Permalink to &quot;基本配置&quot;">​</a></h2><h3 id="一级导航" tabindex="-1">一级导航 <a class="header-anchor" href="#一级导航" aria-label="Permalink to &quot;一级导航&quot;">​</a></h3><p>一个导航模块包含以下结构：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> menus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">recordRaw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;演示&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  windowName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Example&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> menus</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">注意事项</p><p>整个项目所有导航的 <code>windowName</code> 不能重复</p></div><h3 id="多级导航" tabindex="-1">多级导航 <a class="header-anchor" href="#多级导航" aria-label="Permalink to &quot;多级导航&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> menus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">recordRaw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;演示&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  children: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;演示页面&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      windowName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Example&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> menus</span></span></code></pre></div><h3 id="外链" tabindex="-1">外链 <a class="header-anchor" href="#外链" aria-label="Permalink to &quot;外链&quot;">​</a></h3><p>只需要将 <code>windowName</code> 设置为需要跳转的 HTTP 地址即可。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> menus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">recordRaw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;官网&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  windowName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://one-step-admin.hurui.me&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> menus</span></span></code></pre></div><h3 id="主导航" tabindex="-1">主导航 <a class="header-anchor" href="#主导航" aria-label="Permalink to &quot;主导航&quot;">​</a></h3><p>主导航会将我们配置好的导航模块进行归类，在 <code>/src/menu/index.ts</code> 里进行设置。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> menu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;演示&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    icon: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sidebar-default&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    children: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      WindowExample,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>主导航只需设置 <code>title</code> 、<code>icon</code> 和 <code>children</code> 三个参数，其中 <code>children</code> 则是存放我们配置的导航模块数据。</p><h2 id="导航配置" tabindex="-1">导航配置 <a class="header-anchor" href="#导航配置" aria-label="Permalink to &quot;导航配置&quot;">​</a></h2><h3 id="title" tabindex="-1">title <a class="header-anchor" href="#title" aria-label="Permalink to &quot;title&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✔️</td><td style="text-align:center;">/</td><td style="text-align:left;">导航展示的标题</td></tr></tbody></table>`,20)),e(a,{type:"tip",text:"v4.4.0"}),t[16]||(t[16]=s(" 开始，")),e(a,{type:"pro",text:"专业版"}),t[17]||(t[17]=n(' 支持设置 i18n 对应的 key 值，详细可阅读《<a href="./i18n.html">国际化</a>》。<h3 id="windowname" tabindex="-1">windowName <a class="header-anchor" href="#windowname" aria-label="Permalink to &quot;windowName&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✔️</td><td style="text-align:center;">/</td><td style="text-align:left;">窗口组件名，确保唯一</td></tr></tbody></table>',5)),i("h3",k,[t[0]||(t[0]=s("windowWidth ")),e(a,{type:"pro",text:"专业版"}),t[1]||(t[1]=s()),e(a,{type:"tip",text:"v4.6.0 新增"}),t[2]||(t[2]=s()),t[3]||(t[3]=i("a",{class:"header-anchor",href:"#windowwidth","aria-label":'Permalink to "windowWidth <Badge type="pro" text="专业版" /> <Badge type="tip" text="v4.6.0 新增" />"'},"​",-1))]),t[18]||(t[18]=n('<table tabindex="0"><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string / number</td><td style="text-align:center;">✖️</td><td style="text-align:center;">/</td><td style="text-align:left;">窗口宽度，设置为数字时单位为 px</td></tr></tbody></table>',1)),i("h3",o,[t[4]||(t[4]=i("s",null,"i18n",-1)),t[5]||(t[5]=s()),e(a,{type:"pro",text:"专业版"}),t[6]||(t[6]=s()),e(a,{type:"warning",text:"v4.4.0 移除"}),t[7]||(t[7]=s()),t[8]||(t[8]=i("a",{class:"header-anchor",href:"#i18n","aria-label":'Permalink to "~~i18n~~ <Badge type="pro" text="专业版" /> <Badge type="warning" text="v4.4.0 移除" />"'},"​",-1))]),t[19]||(t[19]=n('<table tabindex="0"><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✖️</td><td style="text-align:center;">/</td><td style="text-align:left;">标题国际化对应的 key 值</td></tr></tbody></table><p>详细可阅读《<a href="./i18n.html">国际化</a>》。</p>',2)),i("h3",g,[t[9]||(t[9]=s("noTitle ")),e(a,{type:"pro",text:"专业版"}),t[10]||(t[10]=s()),t[11]||(t[11]=i("a",{class:"header-anchor",href:"#notitle","aria-label":'Permalink to "noTitle <Badge type="pro" text="专业版" />"'},"​",-1))]),t[20]||(t[20]=n('<table tabindex="0"><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">boolean</td><td style="text-align:center;">✖️</td><td style="text-align:center;">false</td><td style="text-align:left;">是否显示窗口标题栏</td></tr></tbody></table><h3 id="icon" tabindex="-1">icon <a class="header-anchor" href="#icon" aria-label="Permalink to &quot;icon&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✖️</td><td style="text-align:center;">/</td><td style="text-align:left;">导航中显示的图标</td></tr></tbody></table><p>该项配置最终会通过 <code>&lt;svg-icon /&gt;</code> 组件进行展示，意味着你可以使用自定义图标，也可使用 Iconify 提供的图标，详细可阅读《<a href="./svg-icon.html">SVG 图标</a>》。</p><h3 id="auth" tabindex="-1">auth <a class="header-anchor" href="#auth" aria-label="Permalink to &quot;auth&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string / array</td><td style="text-align:center;">✖️</td><td style="text-align:center;">/</td><td style="text-align:left;">该路由访问权限，支持多个权限叠加，只要满足一个，即可进入</td></tr></tbody></table><p>用户在登录时，会获取用户权限，根据权限去过滤并动态注册路由。所以没有权限的路由不会被注册，也不会在侧边栏导航里显示，详细可阅读《<a href="./permission.html#路由权限">权限 - 路由权限</a>》。</p>',7)),i("h3",E,[t[12]||(t[12]=s("badge ")),e(a,{type:"pro",text:"专业版"}),t[13]||(t[13]=s()),t[14]||(t[14]=i("a",{class:"header-anchor",href:"#badge","aria-label":'Permalink to "badge <Badge type="pro" text="专业版" />"'},"​",-1))]),t[21]||(t[21]=n(`<table tabindex="0"><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">boolean / number / string</td><td style="text-align:center;">✖️</td><td style="text-align:center;">/</td><td style="text-align:left;">导航标记</td></tr></tbody></table><p>设置不同的类型值，展示效果也会不同。</p><ul><li><code>boolean</code> 展示形式为点，当值为 false 时隐藏</li><li><code>number</code> 展示形式为文本，当值小于等于 0 时隐藏</li><li><code>string</code> 展示形式为文本，当值为空时隐藏</li></ul><p>如果标记需要动态更新，请设置为箭头函数形式，并返回外部变量，例如搭配 pinia 一起使用。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">badge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalStore.number</span></span></code></pre></div><h3 id="params" tabindex="-1">params <a class="header-anchor" href="#params" aria-label="Permalink to &quot;params&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">object</td><td style="text-align:center;">✖️</td><td style="text-align:center;">/</td><td style="text-align:left;">窗口外部传入参数</td></tr></tbody></table><p>该属性通常不在导航里直接配置，而是通过调用全局 <code>useWindow()</code> 提供的 API ，在打开非导航窗口时动态传入窗口所需要的参数。</p><h2 id="后端生成" tabindex="-1">后端生成 <a class="header-anchor" href="#后端生成" aria-label="Permalink to &quot;后端生成&quot;">​</a></h2><p>在应用配置里开启：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> globalSettings</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  menu: {</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    baseOn: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;backend&#39;</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>开启后在 <code>/src/api/modules/app.ts</code> 文件里找到 <code>menuList()</code> 这个函数，并修改这个函数的请求地址，请求返回的数据就是导航数据，你可以在 <code>/src/mock/app.ts</code> 里查看 mock 数据。</p><p>开启后端生成后，导航权限有两种做法，第一种是返回全部的导航数据，让框架自行处理（推荐），第二种是后端直接返回用户具备访问权限的导航数据。</p>`,13))])}const f=l(r,[["render",y]]);export{C as __pageData,f as default};
